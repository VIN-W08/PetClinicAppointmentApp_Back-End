// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PetClinicAppointmentApp;

#nullable disable

namespace PetClinicAppointmentApp.Migrations
{
    [DbContext(typeof(PetClinicAppointmentDbContext))]
    partial class PetClinicAppointmentDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PetClinicAppointmentApp.Models.Appointment", b =>
                {
                    b.Property<int>("Appointment_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Appointment_id"), 1L, 1);

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("Customer_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("End_schedule")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Is_deleted")
                        .HasColumnType("bit");

                    b.Property<int>("Pet_clinic_id")
                        .HasColumnType("int");

                    b.Property<int?>("Schedule_service_id")
                        .HasColumnType("int");

                    b.Property<int?>("Service_id")
                        .HasColumnType("int");

                    b.Property<string>("Service_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Service_price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Start_schedule")
                        .HasColumnType("datetime2");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("Updated_at")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.HasKey("Appointment_id");

                    b.HasIndex("Customer_id");

                    b.HasIndex("Pet_clinic_id");

                    b.HasIndex("Schedule_service_id");

                    b.HasIndex("Service_id");

                    b.ToTable("appointment", (string)null);
                });

            modelBuilder.Entity("PetClinicAppointmentApp.Models.Customer", b =>
                {
                    b.Property<int>("Customer_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Customer_id"), 1L, 1);

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated_at")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.HasKey("Customer_id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("customer", (string)null);
                });

            modelBuilder.Entity("PetClinicAppointmentApp.Models.PetClinic", b =>
                {
                    b.Property<int>("Pet_clinic_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Pet_clinic_id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Image_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Is_deleted")
                        .HasColumnType("bit");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone_num")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Updated_at")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<long>("Village_id")
                        .HasColumnType("bigint");

                    b.HasKey("Pet_clinic_id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("pet_clinic", (string)null);
                });

            modelBuilder.Entity("PetClinicAppointmentApp.Models.SchedulePetClinic", b =>
                {
                    b.Property<int>("Schedule_pet_clinic_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Schedule_pet_clinic_id"), 1L, 1);

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<byte>("Day")
                        .HasColumnType("tinyint");

                    b.Property<TimeSpan>("End_time")
                        .HasColumnType("time");

                    b.Property<int>("Pet_clinic_id")
                        .HasColumnType("int");

                    b.Property<byte>("Shift")
                        .HasColumnType("tinyint");

                    b.Property<TimeSpan>("Start_time")
                        .HasColumnType("time");

                    b.Property<DateTime?>("Updated_at")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.HasKey("Schedule_pet_clinic_id");

                    b.HasIndex("Pet_clinic_id");

                    b.ToTable("schedule_pet_clinic", (string)null);
                });

            modelBuilder.Entity("PetClinicAppointmentApp.Models.ScheduleService", b =>
                {
                    b.Property<int>("Schedule_service_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Schedule_service_id"), 1L, 1);

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("End_schedule")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Is_deleted")
                        .HasColumnType("bit");

                    b.Property<int>("Quota")
                        .HasColumnType("int");

                    b.Property<int>("Service_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Start_schedule")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Updated_at")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.HasKey("Schedule_service_id");

                    b.HasIndex("Service_id");

                    b.ToTable("schedule_service", (string)null);
                });

            modelBuilder.Entity("PetClinicAppointmentApp.Models.Service", b =>
                {
                    b.Property<int>("Service_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Service_id"), 1L, 1);

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pet_clinic_id")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Updated_at")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.HasKey("Service_id");

                    b.HasIndex("Pet_clinic_id");

                    b.ToTable("service", (string)null);
                });

            modelBuilder.Entity("PetClinicAppointmentApp.Models.Appointment", b =>
                {
                    b.HasOne("PetClinicAppointmentApp.Models.Customer", "Customer")
                        .WithMany("Appointments")
                        .HasForeignKey("Customer_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PetClinicAppointmentApp.Models.PetClinic", "Pet_clinic")
                        .WithMany("Appointments")
                        .HasForeignKey("Pet_clinic_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PetClinicAppointmentApp.Models.ScheduleService", "Schedule_service")
                        .WithMany("Appointments")
                        .HasForeignKey("Schedule_service_id");

                    b.HasOne("PetClinicAppointmentApp.Models.Service", "Service")
                        .WithMany("Appointments")
                        .HasForeignKey("Service_id");

                    b.Navigation("Customer");

                    b.Navigation("Pet_clinic");

                    b.Navigation("Schedule_service");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("PetClinicAppointmentApp.Models.SchedulePetClinic", b =>
                {
                    b.HasOne("PetClinicAppointmentApp.Models.PetClinic", "Pet_clinic")
                        .WithMany("Schedules_pet_clinic")
                        .HasForeignKey("Pet_clinic_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pet_clinic");
                });

            modelBuilder.Entity("PetClinicAppointmentApp.Models.ScheduleService", b =>
                {
                    b.HasOne("PetClinicAppointmentApp.Models.Service", "Service")
                        .WithMany("Schedules_service")
                        .HasForeignKey("Service_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Service");
                });

            modelBuilder.Entity("PetClinicAppointmentApp.Models.Service", b =>
                {
                    b.HasOne("PetClinicAppointmentApp.Models.PetClinic", "Pet_clinic")
                        .WithMany("Services")
                        .HasForeignKey("Pet_clinic_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pet_clinic");
                });

            modelBuilder.Entity("PetClinicAppointmentApp.Models.Customer", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("PetClinicAppointmentApp.Models.PetClinic", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("Schedules_pet_clinic");

                    b.Navigation("Services");
                });

            modelBuilder.Entity("PetClinicAppointmentApp.Models.ScheduleService", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("PetClinicAppointmentApp.Models.Service", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("Schedules_service");
                });
#pragma warning restore 612, 618
        }
    }
}
